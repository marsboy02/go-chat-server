version: '3.8'

services:
  chat-server:
    build:
      context: ..
      dockerfile: Dockerfile
    image: go-chat-server:latest
    container_name: go-chat-server-prod
    ports:
      - "80:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - DEV_MODE=false
      - TEMPLATE_DIR=web/templates
      - STATIC_DIR=web/static
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chat-network-prod
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-server.rule=Host(`${TRAEFIK_DOMAIN:-chat.yourdomain.com}`)"
      - "traefik.http.routers.chat-server.entrypoints=websecure"
      - "traefik.http.routers.chat-server.tls.certresolver=letsencrypt"
      - "traefik.http.services.chat-server.loadbalancer.server.port=8080"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Traefik reverse proxy with SSL
  traefik:
    image: traefik:v2.10
    container_name: traefik-prod
    command:
      - "--api=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@yourdomain.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    restart: always
    networks:
      - chat-network-prod
    depends_on:
      - chat-server

  # Redis for session storage and scaling
  redis:
    image: redis:7-alpine
    container_name: redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme123}
    volumes:
      - redis-prod-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: always
    networks:
      - chat-network-prod
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  chat-network-prod:
    driver: bridge

volumes:
  redis-prod-data:
    driver: local